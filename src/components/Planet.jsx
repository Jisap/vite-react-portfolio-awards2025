/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";

export function Planet(props) {
  const shapeContainer = useRef(null);
  const shperesContainer = useRef(null);
  const ringContainer = useRef(null);
  const { nodes, materials } = useGLTF("/models/Planet.glb");

  useGSAP(() => {
    const tl = gsap.timeline();
    tl.from(shapeContainer.current.position, { // Animación de entrada de posición
      y: 5,
      duration: 3,
      ease: "circ.out",
    });
    tl.from(
      shperesContainer.current.rotation,       // Animación de rotación de los planetas
      {                                        // En Three.js, la rotación es un objeto con propiedades x, y, y z que representan la rotación en cada eje (en radianes).
        x: 0,                                  // La animación comenzará con una rotación de 0 grados en el eje X.
        y: Math.PI,                            // Comenzará con una rotación de 180 grados (Math.PI radianes) en el eje Y.
        z: -Math.PI,                           // Comenzará con una rotación de -180 grados en el eje Z. 
        duration: 10,
        ease: "power1.inOut",
      },
      "-=25%"                                  // La animación anterior dura 3s. El 25% de 3s = 2.5s. La animación comenzará a los (3s - 2.5s) = 0.5s de haber empezado la linea de tiempo
    );
    tl.from(
      ringContainer.current.rotation,          // Animación de rotación del anillo
      {
        x: 0.8,                                // Parte de una inclinación de 0.8 radianes en el eje x. 
        y: 0,
        z: 0,
        duration: 10,
        ease: "power1.inOut",
      },
      "<"                                      // Comienza al mismo tiempo que la animación anterior.
    );
  }, []);

  return (
    <group ref={shapeContainer} {...props} dispose={null}>
      <group ref={shperesContainer}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere.geometry}
          material={materials["Material.002"]}
          rotation={[0, 0, 0.741]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere2.geometry}
          material={materials["Material.001"]}
          position={[0.647, 1.03, -0.724]}
          rotation={[0, 0, 0.741]}
          scale={0.223}
        />
      </group>
      <mesh
        ref={ringContainer}
        castShadow
        receiveShadow
        geometry={nodes.Ring.geometry}
        material={materials["Material.001"]}
        rotation={[-0.124, 0.123, -0.778]}
        scale={2}
      />
    </group>
  );
}

useGLTF.preload("/models/Planet.glb");